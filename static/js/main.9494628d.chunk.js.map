{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p2-homeworks/h5/Header.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Header","to","Message","props","className","style","contaner","message","ava","src","avatar","messageArea","name","time","messageData","HW1","SuperButton","red","restProps","finalClassName","s","default","Affair","affair","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","key","affairs","setFilter","defaultAffairs","priority","HW2","useState","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","finalSpanClassName","finalInputClassName","errorInput","superInput","e","currentTarget","value","Greeting","setNameCallback","addUser","totalUsers","inputClass","someClass","GreetingContainer","users","addUserCallback","setName","setError","length","alert","HW3","setUsers","newUserName","v1","SuperCheckbox","onChangeChecked","children","checked","checkbox","HW4","text","setText","showAlert","setChecked","column","blue","PreJunior","Error404","error404","Routes","exact","path","render","HW5","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.9494628d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contaner\":\"Message_contaner__1GK8B\",\"message\":\"Message_message__28k13\",\"ava\":\"Message_ava__3pGk1\",\"messageArea\":\"Message_messageArea__240j5\",\"time\":\"Message_time__r5np4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1PflB\",\"error404\":\"App_error404__qRqCr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"affairs\":\"Affairs_affairs__1vsMf\",\"affair\":\"Affairs_affair__1p98m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__3OlBc\",\"errorInput\":\"SuperInputText_errorInput__1hciX\",\"error\":\"SuperInputText_error__19nxq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__4pqlr\",\"red\":\"SuperButton_red__2BqnW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__hnAct\",\"error\":\"Greeting_error__kArJm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__2F0np\",\"column\":\"HW4_column__Ts4Gf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__3sJOJ\",\"spanClassName\":\"SuperCheckbox_spanClassName__MfWya\"};","import React from \"react\";\nimport {NavLink} from \"react-router-dom\";\n\nfunction Header() {\n    return (\n        <div>\n            <div>\n                <NavLink to=\"/junior\" >Junior</NavLink>\n            </div>\n            <div>\n                <NavLink to=\"/preJunior\" >PreJunior</NavLink>\n            </div>\n\n        </div>\n    );\n}\n\nexport default Header;\n","import React from \"react\";\nimport style from './Message.module.css';\n\n\ntype MessagePropsType = {\n    avatar: string\n    name: string\n    message: string\n    time: string\n}\n\n\n function Message(props:MessagePropsType) {\n    return (\n        <div className={style.contaner}>\n        <div className={style.message}>\n            <div className={style.ava}>\n                <img src={props.avatar} />\n            </div>\n            <div className={style.messageArea}>\n                <span>{props.name}</span>\n                <div> {props.message}</div>\n                <div className={style.time}>{props.time}</div>\n            </div>\n        </div>\n\n\n\n\n        </div>\n    );\n}\n\nexport default Message;\n","import React from \"react\";\nimport Message from \"./Message\";\nimport Message2 from \"./Message2\";\n\nexport type MessageDataPropsType = {\n    avatar: string ,\n    name: string,\n    message: string,\n    time: string,\n}\n\n\nconst messageData:MessageDataPropsType  = {\n    avatar: \"https://i.pinimg.com/736x/6d/f7/03/6df7036c28e8cf6b160f4839a4bd8c3d--gru--agnes-despicable-me.jpg\",\n    name: \"Julia\",\n    message: \"Pies are a baked or fried dough dish with a filling. The dough can be different - yeast, sponge, puff, shortbread, grated... Pies are open when the filling is on top of the dough, and closed when the filling is completely inside the dough. There are many varieties of pies: kulebyaka, kurnik, sweet pies, chapilg, Kish, sponge cake, cheesecake, strudel, gingerbread, kulich, Mannik, taten, cheesecake, Babka\",\n    time: \"22:00\",\n};\n\nfunction HW1() {\n    return (\n        <div>\n            <hr/>\n            <h3>homeworks 1</h3>\n\n            {/*should work (должно работать)*/}\n\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeMessage/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW1;\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\nimport s from \"./SuperButton.module.css\";\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n\n    const finalClassName = red ? `${s.red} ${className}` : `${s.default} ${className}`;\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    );\n}\n\nexport default SuperButton;\n","import React from \"react\";\nimport {AffairType} from \"./HW2\";\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\nimport s from \"./Affairs.module.css\";\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType\n    deleteAffairCallback: (_id: number) => void\n}\n\nfunction Affair(props: AffairPropsType) {\n\nconst deleteCallback = () => {props.deleteAffairCallback(props.affair._id)}\n    return (\n        <div className={s.affair} >\n            <div>{props.affair.name}</div>\n           <div><SuperButton onClick={deleteCallback}>X</SuperButton></div>\n\n            {/*<button onClick={deleteCallback}>X</button>*/}\n        </div>\n    );\n}\n\nexport default Affair\n\n","import React from \"react\";\nimport Affair from \"./Affair\";\nimport {AffairType, FilterType} from \"./HW2\";\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\nimport s from \"./Affairs.module.css\";\n\ntype AffairsPropsType = { // need to fix any\n    data: Array<AffairType>\n    setFilter: (filter: FilterType) => void\n    deleteAffairCallback: (_id: number) => void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {props.setFilter(\"all\")};\n    const setHigh = () => {props.setFilter(\"high\")};\n    const setMiddle = () => {props.setFilter(\"middle\")};\n    const setLow = () => {props.setFilter(\"low\")};\n\n    return (\n        <div className={s.affairs}>\n\n            {mappedAffairs}\n            <SuperButton onClick={setAll}>All</SuperButton>\n            <SuperButton onClick={setHigh}>High</SuperButton>\n            <SuperButton onClick={setMiddle}>Middle</SuperButton>\n            <SuperButton onClick={setLow}>Low</SuperButton>\n{/*\n            <button onClick={setAll}>All</button>\n            <button onClick={setHigh}>High</button>\n            <button onClick={setMiddle}>Middle</button>\n            <button onClick={setLow}>Low</button>*/}\n        </div>\n    );\n}\n\nexport default Affairs;\n","import React, {useState} from \"react\";\nimport Affairs from \"./Affairs\";\nimport Affair from \"./Affair\";\n\n\n// types\nexport type AffairPriorityType = string;\nexport type AffairType = {\n    _id: number\n    name: string\n    priority: AffairPriorityType\n};\nexport type FilterType = \"all\" | AffairPriorityType;\n\n// constants\nconst defaultAffairs: Array<AffairType> = [\n    {_id: 1, name: \"React\", priority: \"high\"},\n    {_id: 2, name: \"ani\", priority: \"low\"},\n    {_id: 4, name: \"work\", priority: \"high\"},\n    {_id: 5, name: \"html & css\", priority: \"middle\"},\n];\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\n    if (filter === \"all\") return affairs;\n    if (filter === \"high\") return affairs.filter(affair =>affair.priority === \"high\");\n    if (filter === \"middle\") return affairs.filter(affair =>affair.priority === \"middle\");\n    if (filter === \"low\") return affairs.filter(affair =>affair.priority === \"low\");\n    else return affairs;\n}\n\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): any => { // need to fix any\n    return affairs.filter(affair => affair._id !== _id);\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType> >(defaultAffairs);\n    const [filter, setFilter] = useState<FilterType>(\"all\");\n\n    const filteredAffairs = filterAffairs(affairs, filter);\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id));\n\n    return (\n        <div>\n            <hr/>\n           <h3>homeworks 2</h3>\n\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr/>\n\n           {/* <AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW2;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\nimport s from \"./SuperInputText.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n};\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value);\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        e.key === \"Enter\" // если нажата кнопка Enter\n        && onEnter // и есть пропс onEnter\n        && onEnter(); // то вызвать его\n    }\n\n   // const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\n  //  const finalInputClassName = `${s.errorInput} ${className}`; // need to fix with (?:) and s.superInput\n  //  const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\n //  const finalInputClassName = {error}? s.errorInput : s.superInput ; // need to fix with (?:) and s.superInput\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\n    const finalInputClassName =   error? `${s.errorInput} ${className}`: `${s.superInput} ${className}`; // need to fix with (?:) and s.superInput\n    return (\n        <>\n            <input\n                type={\"text\"}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    );\n}\n\nexport default SuperInputText;\n","import React, {ChangeEvent} from \"react\";\nimport s from \"./Greeting.module.css\";\nimport SuperInputText from \"../h4/common/c1-SuperInputText/SuperInputText\";\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\n\ntype GreetingPropsType = {\n    name: string // need to fix any\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\n    addUser: () => void  // need to fix any\n    error: string // need to fix any\n    totalUsers: number // need to fix any\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\n) => {\n    const inputClass = error === \"Error!\" ? s.error : s.someClass;\n    return (\n        <div>\n            <SuperInputText value={name} onChange={setNameCallback} className={inputClass}/>\n           {/* <input value={name} onChange={setNameCallback} className={inputClass}/>*/}\n            <span>{error}</span>\n            <SuperButton onClick={addUser}>add</SuperButton>\n            {/*<button onClick={addUser}>add</button>*/}\n            <span>{totalUsers}</span>\n        </div>\n    );\n}\n\nexport default Greeting;\n","import React, {useState,KeyboardEvent, ChangeEvent} from \"react\";\nimport Greeting from \"./Greeting\";\nimport { UserType } from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n    users: Array<UserType> // need to fix any\n    addUserCallback: (name:string) => void // need to fix any\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>(\"\"); // need to fix any\n    const [error, setError] = useState<string>(\"\"); // need to fix any\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {\n     setName(e.currentTarget.value);\n       }\n\n    const addUser = () => {\n\n        if (name === \"\"){setError(\"Error!\")}\n        else { addUserCallback(name)\n            alert(`Hello ${name}!`);\n            setName(\"\");\n            setError(\"\");\n        }\n\n\n    // need to fix\n    }\n\n    const totalUsers = users.length; // need to fix\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n        />\n    );\n}\n\nexport default GreetingContainer;\n","import React, {useState} from \"react\";\nimport GreetingContainer from \"./GreetingContainer\";\nimport { v1 } from \"uuid\";\n\n// types\nexport type UserType = {\n    _id: string // need to fix any\n    name: string // need to fix any\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<Array<UserType>>([]); // need to fix any\n\n    const addUserCallback = (name: string) => { // need to fix any\n        debugger\n        let username = {_id: v1(), name: \"NewName\"}\n        let newUserName = [username, ...users ];\n        setUsers(newUserName); // need to fix\n    }\n\n    return (\n        <div>\n            <hr/>\n            <h3>homeworks 3</h3>\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW3;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\nimport s from \"./SuperCheckbox.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n};\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        // сделайте так чтоб работал onChange и onChangeChecked\n        onChange && onChange(e)\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n    }\n\n   /* const finalInputClassName = `${s.checkbox} ${className}`*/\n    /* `${s.checkbox} ${className ? className : \"\"}`;*/\n\n    return (\n        <label>\n            <input\n                type={\"checkbox\"}\n                onChange={onChangeCallback}\n                className={s.checkbox}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    );\n}\n\nexport default SuperCheckbox;\n","import React, {ChangeEvent, useState} from \"react\";\nimport SuperInputText from \"./common/c1-SuperInputText/SuperInputText\";\nimport s from \"./HW4.module.css\";\nimport SuperButton from \"./common/c2-SuperButton/SuperButton\";\nimport SuperCheckbox from \"./common/c3-SuperCheckbox/SuperCheckbox\";\n\nfunction HW4() {\n    const [text, setText] = useState<string>(\"\");\n    const error = text ? \"\" : \"error\";\n    const showAlert = () => {\n        if (error) {\n            alert(\"введите текст...\");\n        } else {\n            alert(text); // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false);\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked);\n\n    return (\n        <div>\n            <hr/>\n            <h3>homeworks 4</h3>\n\n            <div className={`${s.column} ${s.blue}`}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n\n                />\n\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >  delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked} >I like this button {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChange={testOnChange}></SuperCheckbox>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW4;\n","import React from \"react\";\nimport HW1 from \"../../h1/HW1\";\nimport HW2 from \"../../h2/HW2\";\nimport HW3 from \"../../h3/HW3\";\nimport HW4 from \"../../h4/HW4\";\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            {/*<HW6/>*/}\n\n        </div>\n    );\n}\n\nexport default PreJunior;\n","import React from \"react\";\nimport s from \"../../../p1-main/m1-ui/u1-app/App.module.css\";\n\nfunction Error404() {\n    return (\n        <div className={s.error404}>\n            <img src=\"https://w7.pngwing.com/pngs/324/215/png-transparent-http-404-error-message-small-alligator-web-design-material-damage-animals-text-vertebrate-thumbnail.png\" />\n\n            <div>404</div>\n            <div>Page not found!</div>\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    );\n}\n\nexport default Error404;\n","import React from \"react\";\nimport {Switch, Route, Redirect} from \"react-router-dom\";\nimport PreJunior from \"./pages/PreJunior\";\nimport Error404 from \"./pages/Error404\";\n\nexport const PATH = {\n    PRE_JUNIOR: \"/pre-junior\",\n    // add paths\n}\n\nfunction Routes() {\n    let PRE_JUNIOR =\"/preJunior\"\n    let JUNIOR = \"/junior\"\n    return (\n        <div>\n            {/*Switch выбирает первый подходящий роут*/}\n            <Switch>\n\n            {/*в начале мы попадаем на страницу \"/\" и переходим сразу на страницу PRE_JUNIOR*/}\n            {/*exact нужен чтоб указать полное совподение (что после \"/\" ничего не будет)*/}\n            <Route exact path=\"/\"  render={() => <Redirect to={PRE_JUNIOR}/>}/>\n            <Route exact path={JUNIOR}  render={() => <Redirect to={JUNIOR}/>}/>\n            <Route path={PRE_JUNIOR} render={() => <PreJunior/>}/>\n\n\n            {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n            <Route render={() => <Error404/>}/>\n\n            </Switch>\n        </div>\n    );\n}\n\nexport default Routes;\n","import React from \"react\";\nimport Header from \"./Header\";\nimport Routes from \"./Routes\";\nimport {HashRouter} from \"react-router-dom\";\n\nfunction HW5() {\n    return (\n        <div>\n            <hr/>\n            <h3>homeworks 5</h3>\n            <HashRouter>\n            <Header/>\n            <Routes/>\n            </HashRouter>\n        </div>\n    );\n}\n\nexport default HW5;","import React from \"react\";\nimport s from \"./App.module.css\";\nimport HW1 from \"../../../p2-homeworks/h1/HW1\";\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <h3>REACT HOMEWORKS:</h3>\n            {/*<HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>*/}\n            <HW5/>\n\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./p1-main/m1-ui/u1-app/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}