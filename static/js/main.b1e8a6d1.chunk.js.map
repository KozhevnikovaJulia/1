{"version":3,"sources":["p2-homeworks/h5/HW5.module.css","p2-homeworks/h1/Message.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p2-homeworks/h7/common/c5-SuperSelect/SuperSelect.module.css","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.module.css","p2-homeworks/h5/NavBar.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h7/common/c5-SuperSelect/SuperSelect.tsx","p2-homeworks/h7/common/c6-SuperRadio/SuperRadio.tsx","p2-homeworks/h7/HW7.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","NavBar","React","useState","state","setState","Fragment","Button","onClick","Drawer","anchor","open","onClose","className","s","item","to","activeClassName","active","Header","Message","props","style","contaner","message","ava","src","avatar","messageArea","name","time","messageData","HW1","SuperButton","red","restProps","finalClassName","default","Affair","affair","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","key","affairs","setFilter","defaultAffairs","priority","HW2","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","finalSpanClassName","finalInputClassName","errorInput","superInput","e","currentTarget","value","Greeting","setNameCallback","addUser","totalUsers","inputClass","someClass","GreetingContainer","users","addUserCallback","setName","setError","length","alert","HW3","setUsers","newUserName","v1","SuperCheckbox","onChangeChecked","children","checked","checkbox","HW4","text","setText","showAlert","setChecked","column","blue","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","superSpan","saveState","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","HW6","setValue","undefined","saveValue","PreJunior","SuperSelect","options","onChangeOption","mappedOptions","o","index","items","select","SuperRadio","check","setCheck","i","arr","HW7","Junior","JuniorPlus","Error404","error404","Routes","exact","path","render","HW5","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.b1e8a6d1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"HW5_item__2RmYa\",\"active\":\"HW5_active__32o56\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contaner\":\"Message_contaner__3hJ1n\",\"message\":\"Message_message__1wlGS\",\"ava\":\"Message_ava__3l4d1\",\"messageArea\":\"Message_messageArea__3diQT\",\"time\":\"Message_time__27dVe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2JUod\",\"error404\":\"App_error404__2B9eE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"affairs\":\"Affairs_affairs__320Ws\",\"affair\":\"Affairs_affair__1Wn-H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__12qSE\",\"errorInput\":\"SuperInputText_errorInput__1sbhY\",\"error\":\"SuperInputText_error__3XM83\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__2_g-l\",\"red\":\"SuperButton_red__3zQ7z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__2wc9g\",\"error\":\"Greeting_error__3s78g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__2lZmL\",\"column\":\"HW4_column__Kw4Un\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__3_4-Z\",\"spanClassName\":\"SuperCheckbox_spanClassName__25dBW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"SuperSelect_select__2AjW6\",\"items\":\"SuperSelect_items__2aaxX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superSpan\":\"SuperEditableSpan_superSpan__JOx_r\"};","import React from \"react\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Button from \"@material-ui/core/Button\";\nimport s from \"./HW5.module.css\";\nimport {NavLink} from \"react-router-dom\";\n\n\nexport default function NavBar() {\n    const [state, setState] = React.useState(false);\n\n    return (\n        <div>\n                <React.Fragment >\n                    <Button onClick={() => setState(true)}>Menu</Button>\n                    <Drawer anchor={'left'} open={state} onClose={() => setState(false)}>\n                        <div className={s.item}>\n                            <NavLink to=\"/preJunior\" activeClassName={s.active} >PreJunior</NavLink>\n                        </div>\n                        <div className={s.item}>\n                            <NavLink to=\"/junior\" activeClassName={s.active}>Junior</NavLink>\n                        </div>\n                        <div className={s.item}>\n                            <NavLink to=\"/juniorPlus\" activeClassName={s.active}>JuniorPlus</NavLink>\n                        </div>\n                    </Drawer>\n                </React.Fragment>\n        </div>\n    );\n}\n\n\n\n","import React from \"react\";\nimport NavBar from \"./NavBar\";\n\nfunction Header() {\n    return (\n        <div>\n            <NavBar/>\n\n\n        </div>\n    );\n}\n\nexport default Header;\n","import React from \"react\";\nimport style from './Message.module.css';\n\n\ntype MessagePropsType = {\n    avatar: string\n    name: string\n    message: string\n    time: string\n}\n\n\n function Message(props:MessagePropsType) {\n    return (\n        <div className={style.contaner}>\n        <div className={style.message}>\n            <div className={style.ava}>\n                <img src={props.avatar} />\n            </div>\n            <div className={style.messageArea}>\n                <span>{props.name}</span>\n                <div> {props.message}</div>\n                <div className={style.time}>{props.time}</div>\n            </div>\n        </div>\n\n\n\n\n        </div>\n    );\n}\n\nexport default Message;\n","import React from \"react\";\nimport Message from \"./Message\";\nimport Message2 from \"./Message2\";\n\nexport type MessageDataPropsType = {\n    avatar: string ,\n    name: string,\n    message: string,\n    time: string,\n}\n\n\nconst messageData:MessageDataPropsType  = {\n    avatar: \"https://i.pinimg.com/736x/6d/f7/03/6df7036c28e8cf6b160f4839a4bd8c3d--gru--agnes-despicable-me.jpg\",\n    name: \"Julia\",\n    message: \"Pies are a baked or fried dough dish with a filling. The dough can be different - yeast, sponge, puff, shortbread, grated... Pies are open when the filling is on top of the dough, and closed when the filling is completely inside the dough. There are many varieties of pies: kulebyaka, kurnik, sweet pies, chapilg, Kish, sponge cake, cheesecake, strudel, gingerbread, kulich, Mannik, taten, cheesecake, Babka\",\n    time: \"22:00\",\n};\n\nfunction HW1() {\n    return (\n        <div>\n            <hr/>\n            <h3>homeworks 1</h3>\n\n            {/*should work (должно работать)*/}\n\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeMessage/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW1;\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\nimport s from \"./SuperButton.module.css\";\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n\n    const finalClassName = red ? `${s.red} ${className}` : `${s.default} ${className}`;\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    );\n}\n\nexport default SuperButton;\n","import React from \"react\";\nimport {AffairType} from \"./HW2\";\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\nimport s from \"./Affairs.module.css\";\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType\n    deleteAffairCallback: (_id: number) => void\n}\n\nfunction Affair(props: AffairPropsType) {\n\nconst deleteCallback = () => {props.deleteAffairCallback(props.affair._id)}\n    return (\n        <div className={s.affair} >\n            <div>{props.affair.name}</div>\n           <div><SuperButton onClick={deleteCallback}>X</SuperButton></div>\n\n            {/*<button onClick={deleteCallback}>X</button>*/}\n        </div>\n    );\n}\n\nexport default Affair\n\n","import React from \"react\";\nimport Affair from \"./Affair\";\nimport {AffairType, FilterType} from \"./HW2\";\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\nimport s from \"./Affairs.module.css\";\n\ntype AffairsPropsType = { // need to fix any\n    data: Array<AffairType>\n    setFilter: (filter: FilterType) => void\n    deleteAffairCallback: (_id: number) => void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {props.setFilter(\"all\")};\n    const setHigh = () => {props.setFilter(\"high\")};\n    const setMiddle = () => {props.setFilter(\"middle\")};\n    const setLow = () => {props.setFilter(\"low\")};\n\n    return (\n        <div className={s.affairs}>\n\n            {mappedAffairs}\n            <SuperButton onClick={setAll}>All</SuperButton>\n            <SuperButton onClick={setHigh}>High</SuperButton>\n            <SuperButton onClick={setMiddle}>Middle</SuperButton>\n            <SuperButton onClick={setLow}>Low</SuperButton>\n{/*\n            <button onClick={setAll}>All</button>\n            <button onClick={setHigh}>High</button>\n            <button onClick={setMiddle}>Middle</button>\n            <button onClick={setLow}>Low</button>*/}\n        </div>\n    );\n}\n\nexport default Affairs;\n","import React, {useState} from \"react\";\nimport Affairs from \"./Affairs\";\nimport Affair from \"./Affair\";\n\n\n// types\nexport type AffairPriorityType = string;\nexport type AffairType = {\n    _id: number\n    name: string\n    priority: AffairPriorityType\n};\nexport type FilterType = \"all\" | AffairPriorityType;\n\n// constants\nconst defaultAffairs: Array<AffairType> = [\n    {_id: 1, name: \"React\", priority: \"high\"},\n    {_id: 2, name: \"ani\", priority: \"low\"},\n    {_id: 4, name: \"work\", priority: \"high\"},\n    {_id: 5, name: \"html & css\", priority: \"middle\"},\n];\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\n    if (filter === \"all\") return affairs;\n    if (filter === \"high\") return affairs.filter(affair =>affair.priority === \"high\");\n    if (filter === \"middle\") return affairs.filter(affair =>affair.priority === \"middle\");\n    if (filter === \"low\") return affairs.filter(affair =>affair.priority === \"low\");\n    else return affairs;\n}\n\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): any => { // need to fix any\n    return affairs.filter(affair => affair._id !== _id);\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType> >(defaultAffairs);\n    const [filter, setFilter] = useState<FilterType>(\"all\");\n\n    const filteredAffairs = filterAffairs(affairs, filter);\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id));\n\n    return (\n        <div>\n            <hr/>\n           <h3>homeworks 2</h3>\n\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr/>\n\n           {/* <AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW2;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\nimport s from \"./SuperInputText.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n};\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value);\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        e.key === \"Enter\" // если нажата кнопка Enter\n        && onEnter // и есть пропс onEnter\n        && onEnter(); // то вызвать его\n    }\n\n   // const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\n  //  const finalInputClassName = `${s.errorInput} ${className}`; // need to fix with (?:) and s.superInput\n  //  const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\n //  const finalInputClassName = {error}? s.errorInput : s.superInput ; // need to fix with (?:) and s.superInput\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\n    const finalInputClassName =   error? `${s.errorInput} ${className}`: `${s.superInput} ${className}`; // need to fix with (?:) and s.superInput\n    return (\n        <>\n            <input\n                type={\"text\"}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    );\n}\n\nexport default SuperInputText;\n","import React, {ChangeEvent} from \"react\";\nimport s from \"./Greeting.module.css\";\nimport SuperInputText from \"../h4/common/c1-SuperInputText/SuperInputText\";\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\n\ntype GreetingPropsType = {\n    name: string // need to fix any\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\n    addUser: () => void  // need to fix any\n    error: string // need to fix any\n    totalUsers: number // need to fix any\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\n) => {\n    const inputClass = error === \"Error!\" ? s.error : s.someClass;\n    return (\n        <div>\n            <SuperInputText value={name} onChange={setNameCallback} className={inputClass}/>\n           {/* <input value={name} onChange={setNameCallback} className={inputClass}/>*/}\n            <span>{error}</span>\n            <SuperButton onClick={addUser}>add</SuperButton>\n            {/*<button onClick={addUser}>add</button>*/}\n            <span>{totalUsers}</span>\n        </div>\n    );\n}\n\nexport default Greeting;\n","import React, {useState,KeyboardEvent, ChangeEvent} from \"react\";\nimport Greeting from \"./Greeting\";\nimport { UserType } from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n    users: Array<UserType> // need to fix any\n    addUserCallback: (name:string) => void // need to fix any\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>(\"\"); // need to fix any\n    const [error, setError] = useState<string>(\"\"); // need to fix any\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {\n     setName(e.currentTarget.value);\n       }\n\n    const addUser = () => {\n\n        if (name === \"\"){setError(\"Error!\")}\n        else { addUserCallback(name)\n            alert(`Hello ${name}!`);\n            setName(\"\");\n            setError(\"\");\n        }\n\n\n    // need to fix\n    }\n\n    const totalUsers = users.length; // need to fix\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n        />\n    );\n}\n\nexport default GreetingContainer;\n","import React, {useState} from \"react\";\nimport GreetingContainer from \"./GreetingContainer\";\nimport { v1 } from \"uuid\";\n\n// types\nexport type UserType = {\n    _id: string // need to fix any\n    name: string // need to fix any\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<Array<UserType>>([]); // need to fix any\n\n    const addUserCallback = (name: string) => { // need to fix any\n        debugger\n        let username = {_id: v1(), name: \"NewName\"}\n        let newUserName = [username, ...users ];\n        setUsers(newUserName); // need to fix\n    }\n\n    return (\n        <div>\n            <hr/>\n            <h3>homeworks 3</h3>\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW3;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\nimport s from \"./SuperCheckbox.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n};\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        // сделайте так чтоб работал onChange и onChangeChecked\n        onChange && onChange(e)\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n    }\n\n   /* const finalInputClassName = `${s.checkbox} ${className}`*/\n    /* `${s.checkbox} ${className ? className : \"\"}`;*/\n\n    return (\n        <label>\n            <input\n                type={\"checkbox\"}\n                onChange={onChangeCallback}\n                className={s.checkbox}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    );\n}\n\nexport default SuperCheckbox;\n","import React, {ChangeEvent, useState} from \"react\";\nimport SuperInputText from \"./common/c1-SuperInputText/SuperInputText\";\nimport s from \"./HW4.module.css\";\nimport SuperButton from \"./common/c2-SuperButton/SuperButton\";\nimport SuperCheckbox from \"./common/c3-SuperCheckbox/SuperCheckbox\";\n\nfunction HW4() {\n    const [text, setText] = useState<string>(\"\");\n    const error = text ? \"\" : \"error\";\n    const showAlert = () => {\n        if (error) {\n            alert(\"введите текст...\");\n        } else {\n            alert(text); // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false);\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked);\n\n    return (\n        <div>\n            <hr/>\n            <h3>homeworks 4</h3>\n\n            <div className={`${s.column} ${s.blue}`}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n\n                />\n\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >  delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked} >I like this button {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChange={testOnChange}></SuperCheckbox>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW4;\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from \"react\";\nimport SuperInputText from \"../../../h4/common/c1-SuperInputText/SuperInputText\";\nimport s from \"./SuperEditableSpan.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n// тип пропсов обычного спана\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n\n    spanProps?: DefaultSpanPropsType // пропсы для спана\n};\n\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\n    {\n        autoFocus, // игнорировать изменение этого пропса\n        onBlur,\n        onEnter,\n        spanProps,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const [editMode, setEditMode] = useState<boolean>(false);\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {};\n\n    const onEnterCallback = () => {\n         setEditMode(false); // выключить editMode при нажатии Enter\n\n        onEnter && onEnter();\n    };\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n         setEditMode(false); // выключить editMode при нажатии за пределами инпута\n\n        onBlur && onBlur(e);\n    };\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n         setEditMode(true); // включить editMode при двойном клике\n\n        onDoubleClick && onDoubleClick(e);\n    };\n\n    const spanClassName = `${s.superSpan} ${className}`;\n\n    return (\n        <>\n            {editMode\n                ? (\n                    <SuperInputText\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\n                        onBlur={onBlurCallback}\n                        onEnter={onEnterCallback}\n\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n                    />\n                ) : (\n                    <span\n                        onDoubleClick={onDoubleClickCallBack}\n                        className={spanClassName}\n\n                        {...restSpanProps}\n                    >\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\n                        {children || restProps.value}\n                    </span>\n                )\n            }\n        </>\n    );\n}\n\nexport default SuperEditableSpan;\n","// вот вам функция для сохранения объектов в память браузера\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\nexport function saveState<T>(key: string, state: T) {\n    const stateAsString = JSON.stringify(state);\n    localStorage.setItem(key, stateAsString)\n}\n\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\nexport function restoreState<T>(key: string, defaultState: T) {\n    const stateAsString = localStorage.getItem(key);\n    if (stateAsString !== null) defaultState = JSON.parse(stateAsString) as T;\n    return defaultState;\n}\n\n// ---------------------------------------------------------------------------------------------------------------\n// использование:\ntype StateType = {\n    x: string\n    y: number\n}\n\n// сохраняем объект типа StateType в ячейке \"test\"\nsaveState<StateType>(\"test\", {x: \"A\", y: 1});\n\n// получем в переменную state объект из ячейки \"test\" или дэфолтный объект если ячейка пуста\nconst state: StateType = restoreState<StateType>(\"test\", {x: \"\", y: 0});\n","import React, {useState} from \"react\";\nimport SuperEditableSpan from \"./common/c4-SuperEditableSpan/SuperEditableSpan\";\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\nimport {restoreState, saveState} from \"./localStorage/localStorage\";\n\nfunction HW6() {\n    const [value, setValue] = useState<string>(\"\");\n\n    const save = () => {\n        saveState<string>(\"editable-span-value\", value);\n    };\n    const restore = () => {\n        let saveValue: string = restoreState<string>(\"editable-span-value\", \"\")\n         setValue(saveValue);\n    };\n\n\n\n    return (\n        <div>\n            <hr/>\n           <h3>homeworks 6</h3> \n\n            {/*should work (должно работать)*/}\n            <div>\n                <SuperEditableSpan\n                    value={value}\n                    onChangeText={setValue}\n                    spanProps={{children: value ? undefined : \"enter text...\"}}\n                />\n            </div>\n            <SuperButton onClick={save}>save</SuperButton>\n            <SuperButton onClick={restore}>restore</SuperButton>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperEditableSpan/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW6;\n","import React from \"react\";\nimport HW1 from \"../../h1/HW1\";\nimport HW2 from \"../../h2/HW2\";\nimport HW3 from \"../../h3/HW3\";\nimport HW4 from \"../../h4/HW4\";\nimport HW6 from \"../../h6/HW6\";\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            <HW6/>\n\n        </div>\n    );\n}\n\nexport default PreJunior;\n","import { Options } from \"@material-ui/core\";\nimport React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from \"react\";\nimport s from \"./SuperSelect.module.css\";\n\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\n\ntype SuperSelectPropsType = DefaultSelectPropsType & {\n    \n    options?: Array<string>\n    onChangeOption?: (option: string) => void\n}\n\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\n    {   options,\n        onChange, onChangeOption,\n        ...restProps\n    }\n) => {\n    \n    const mappedOptions = options && options.map((o, index) => \n        <option className={s.items} key={index} >{o}</option>       \n    )\n\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\n        onChangeOption && onChangeOption(e.currentTarget.value)\n        // onChange, onChangeOption\n    }\n\n    return (\n        <select className ={s.select} onChange={onChangeCallback} {...restProps}>\n            {mappedOptions}\n        </select>\n    )\n}\n\n\nexport default SuperSelect;\n\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from \"react\";\n\n\n\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperRadioPropsType = DefaultRadioPropsType & {\n    name: string\n    options?: Array<string>\n    onChangeOption?: (option: string) => void\n    check: boolean\n    setCheck: (check: boolean) => void\n}\n\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\n    { check, setCheck,\n        type, name,\n        options, value,\n        onChange, onChangeOption,\n          ...restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        setCheck(!check) \n        onChangeOption && onChangeOption(e.currentTarget.value)\n        \n        // onChange, onChangeOption\n    }\n\n\n    const mappedOptions: any[] = options ? options.map((o, i) => ( // map options with key\n        <label key={name + \"-\" + i}>\n            <input \n                name={name}\n                value={value}\n                type={\"radio\"}\n                onChange={onChangeCallback}\n                checked={check}\n\n            // name, checked, value, onChange\n            />\n            {o}\n        </label>\n    )) : [];\n\n    return (\n        <>\n            {mappedOptions}\n        </>\n    );\n}\n\nexport default SuperRadio;\n","import React, {useState} from \"react\";\nimport SuperSelect from \"./common/c5-SuperSelect/SuperSelect\";\nimport SuperRadio from \"./common/c6-SuperRadio/SuperRadio\";\n\nconst arr = [\"x\", \"y\", \"z\"];\n\nfunction HW7() {\n    const [value, onChangeOption] = useState(arr[1]);\n    const [check, setCheck]= useState(true)\n\n    return (\n        <div>\n            <hr/>\n            <h3>homeworks 7</h3>\n\n            {/*should work (должно работать)*/}\n            <div>\n                <SuperSelect\n               \n                    options={arr}\n                    value={value}\n                    onChangeOption={onChangeOption}\n                />\n            </div>\n            <div>\n                <SuperRadio\n                    name={\"radio\"}\n                    options={arr}\n                    value={value}\n                    onChangeOption={onChangeOption}\n                    check={check}\n                    setCheck={setCheck}\n                />\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperSelect/>*/}\n            {/*<AlternativeSuperRadio/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW7;\n","import React from \"react\";\nimport HW7 from \"../../h7/HW7\";\n\nfunction Junior() {\n    return (\n        <div>\n         <HW7/>\n        </div>\n    );\n}\n\nexport default Junior;\n","import React from \"react\";\n\n\nfunction JuniorPlus() {\n    return (\n        <div>\n         JuniorPlus\n        </div>\n    );\n}\n\nexport default JuniorPlus;\n","import React from \"react\";\nimport s from \"../../../p1-main/m1-ui/u1-app/App.module.css\";\n\nfunction Error404() {\n    return (\n        <div className={s.error404}>\n            <img src=\"https://w7.pngwing.com/pngs/324/215/png-transparent-http-404-error-message-small-alligator-web-design-material-damage-animals-text-vertebrate-thumbnail.png\" />\n\n        </div>\n    );\n}\n\nexport default Error404;\n","import React from \"react\";\r\nimport {Switch, Route, Redirect} from \"react-router-dom\";\r\nimport PreJunior from \"./pages/PreJunior\";\r\nimport Junior from \"./pages/Junior\";\r\nimport JuniorPlus from \"./pages/JuniorPlus\";\r\nimport Error404 from \"./pages/Error404\";\r\n\r\nexport const PATH = {\r\n    PRE_JUNIOR: \"/pre-junior\",\r\n    // add paths\r\n}\r\n\r\nfunction Routes() {\r\n    let PRE_JUNIOR =\"/preJunior\"\r\n    let JUNIOR = \"/junior\"\r\n    let JUNIOR_PLUS = \"/juniorPlus\"\r\n    return (\r\n        <div>\r\n            {/*Switch выбирает первый подходящий роут*/}\r\n            <Switch>\r\n\r\n            {/*в начале мы попадаем на страницу \"/\" и переходим сразу на страницу PRE_JUNIOR*/}\r\n            {/*exact нужен чтоб указать полное совподение (что после \"/\" ничего не будет)*/}\r\n            <Route exact path=\"/\"  render={() => <Redirect to={PRE_JUNIOR}/>}/>\r\n            <Route exact path={PRE_JUNIOR} render={() => <PreJunior/>}/>\r\n            <Route exact path={JUNIOR}  render={() => <Junior/>}/>\r\n            <Route exact path={JUNIOR_PLUS}  render={() => <JuniorPlus/>}/>\r\n            {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\r\n            <Route render={() => <Error404/>}/>\r\n\r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Routes;\r\n\r\n","import React from \"react\";\nimport Header from \"./Header\";\nimport Routes from \"./Routes\";\nimport {HashRouter} from \"react-router-dom\";\n\n\nfunction HW5() {\n    return (\n        <div>\n            <hr/>\n            <h3>homeworks 5</h3>\n            <HashRouter>\n            <Header/>\n            <Routes/>\n\n\n            </HashRouter>\n        </div>\n    );\n}\n\nexport default HW5;","import React from \"react\";\nimport s from \"./App.module.css\";\nimport HW1 from \"../../../p2-homeworks/h1/HW1\";\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <h3>REACT HOMEWORKS:</h3>\n            {/*<HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>*/}\n            <HW5/>\n\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./p1-main/m1-ui/u1-app/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport 'fontsource-roboto';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}